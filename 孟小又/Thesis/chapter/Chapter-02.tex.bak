\setcounter{chapter}{1}

\chapter{相关技术研究}
\label{chap2}
自然界中各种现象的出现其背后都有一定的物理规则为依据，基于物理的渲染就是利用这些规则重现这这些现象，比如众所周知的全局光照算法\scite{dorsey1995radiosity}。本文的工作是用基于物理的方法渲染体积雾和体积光，因此我们需要知道雾和体积光产生的物理原因，并且根据这个原因构建渲染模型去重现这个现象。因此这个章节会着重介绍大气散射现象相关的物理知识和数学模型，并且介绍一下二维Ray-marching 算法生成体积雾和体积光的算法，本文的算法以此为基础进行改进。

\section{光线传播概要}
在计算机图形学中，呈现给用户的最终画面是由像素组成的，这些像素是视点近平面上的离散点。这些像素的颜色由达到像素的光线决定，因此我们需要计算出每个光源发射的光线在场景中的传播路径，求出每根光线在场景中传播后到达视点近平面上每个像素点的辐射强度。


光线在场景中的传播本质上是能量的传播，遵循能量守恒定律。当光线到达物理表面时，因为物体材质不同，会发生反射或者折射等多种光学现象，物体的颜色是这些现象共同作用的结果，对于不透明物体来说，其颜色受入射光线和出射光线影响，入射光线来源于光源或者周围物体的反射光线，出射光线与物体的材质和入射光线的角度有关，用公式来表达这个过程就是我们所熟悉的渲染方程式\ref{eq:LTE-1}\scite{kajiya1986rendering}：
\begin{eqnarray}
   {{L}_{0}}(x,{{w}_{0}},\lambda ,t)={{L}_{e}}(x,{{w}_{0}},\lambda ,t)+{{\int }_{\Omega }}{{f}_{r}}(x,{{w}_{i}},{{w}_{0}},\lambda ,t){{L}_{i}}(x,{{w}_{i}},\lambda ,t)({{w}_{i}}\cdot \vec n)dw
    \label{eq:LTE-1}
\end{eqnarray}
在公式\ref{eq:LTE-1}中，${{L}_{0}}(x,{{w}_{0}},\lambda ,t)$ 表示空间中的点$x$在$t$时间时，波长为$\lambda$ 的光线在$x$点往${{w}_{0}}$方向上发出的光线辐射强度总和。${{L}_{e}}(x,{{w}_{0}},\lambda ,t)$表示$x$点的自发光强度，${{\int }_{\Omega }}{{f}_{r}}(x,{{w}_{i}},{{w}_{0}},\lambda ,t){{L}_{i}}(x,{{w}_{i}},\lambda ,t)({{w}_{i}}\cdot \vec n)dw$是以$x$点为中心点的半球积分公式，表示点$x$处的各个方向的入射光线对出射方向$w_0$的贡献值总和。为了简化公式，我们假设光线具有特定波长并且光线的出射强度不受时间的影响。此时，$x$点在$w_0$方向的光线出射强度只与位置和出射方向有关。公式简化如下：
\begin{eqnarray}
   {{L}_{0}}(x,{{w}_{0}})={{L}_{e}}(x,{{w}_{0}})+{{\int }_{\Omega }}{{f}_{r}}(x,{{w}_{i}},{{w}_{0}}){{L}_{i}}(x,{{w}_{i}})({{w}_{i}}\cdot \vec n)dw
    \label{eq:LTE-2}
\end{eqnarray}


上述渲染方程描述的是进入我们眼睛的光线辐射强度的来源：自发光和周边光线反射值。但是以这个值作为人眼所看到的最终结果有一个前提条件：光线的传播介质是真空。光在传播过程中没有任何能量的损耗，所见即所得。

 \subsection{散射现象}
但是，现实生活中，绝大部分场景都处于介质中。介质由很多粒子组成。虽然这些粒子不能被肉眼所见，但是它们却对光线的传播过程影响甚大。它们会像肉眼能见的物体一样对光能有吸收和散射作用。所以在光线传播过程中我们需要考虑这些不可见的物质。

\begin{figure}[htbp]
    \centering
    \includegraphics[width=.7\linewidth]{figures/light_trans}
    \caption{散射现象过程示意图}
    \label{pic2_1_light}
\end{figure}
由于传播介质中粒子的存在，光线在传播过程会与介质中的粒子进行碰撞，碰撞以后光能会被散射和吸收，在光学里，这个过程用统计学进行数学模型分析。对于单个介质粒子来说，光的传播能量分布如图\ref{pic2_1_light} 所示。在光线传播过程中，光子的能量被分为下面三个部分：
\begin{itemize}
\item 光能在传播过程中进入人眼的部分；
\item 光能在传播过程中被吸收的部分（通常转化为热能）；
\item 光能在传播过程中被散射的部分；
\end{itemize}


根据能量守恒定律，我们可以得到公式\ref{eq:LTE-3}：
\begin{eqnarray}
    {L_{incoming}} = {L_{transmitted}} + {L_{absorbed}} + {L_{scattered}}
    \label{eq:LTE-3}
\end{eqnarray}

散射又包含两种类型，一种是内散射，一种是外散射。内散射是指外部光线进入介质中时，经过散射后依然能够汇聚到视点的散射；外散射是指外部光线被散射以后偏离视点方向而不能进入人眼的散射。
如图\ref{pic2_2_Scattering} 所示。
\begin{figure}[htbp]
    \centering
    \includegraphics[width=.7\linewidth]{figures/Scattering}
    \caption{外散射内散射示意图}
    \label{pic2_2_Scattering}
\end{figure}
因为吸收和外散射导致的结果都是光线部分辐射强度不能到达人眼，所以消光系数($\sigma_{ex}$) 为吸收系数($\sigma_{a}$)和外散射系数($\sigma_{s}$)之和。


在公式\ref{eq:LTE-3}中,${L_{transmitted}}$代表光线在传播过程中没有受到吸收或者散射的部分，能够透过介质到达人的眼睛。这部分的光线与入射光线的比值被称为透射比。比尔- 朗伯特定律(Beer-Lambert Law)可以计算光在传播过程中的透射比。根据比尔- 朗伯特定律，光在传播过程中，被介质吸收的比例与入射光的强度无关，在光程上每等厚层介质吸收相同比例值的光，我们可以通过消光系数计算出单位厚度下介质吸收光的比例值。这个定律表明，${L_{transmitted}}$ 和光在介质中传播的距离和消光系数有关。比尔- 朗伯特定律计算透射比的数学表示形式为公式
\ref{eq:LTE-4}：
\begin{eqnarray}
    T=\frac{{{\Phi }_{t}}}{\Phi_i}={{e}^{-{{\sigma }_{ex}}l}}
    \label{eq:LTE-4}
\end{eqnarray}
${\Phi }_{t}$代表透射光的强度，${\Phi_i}$代表入射光的总强度。透射比为这两个强度的比值。${\sigma }
_{ex}$为消光系数，$l$为光线在传播过程中的距离。我们将$a$点和$b$点的透射比用$T(a,b)$表示。
公式\ref{eq:LTE-2}中的${{L}_{0}}(x,{{w}_{0}})$表示入射光的光强，那么进入眼睛的透射光强度为公式\ref{eq:LTE-5}：
\begin{eqnarray}
    L_{transmitted}={{L}_{0}}(x,{{w}_{0}})T(a,b)
    \label{eq:LTE-5}
\end{eqnarray}


真实世界里，进入人眼的除了透射光线，也有一部分光线是散射光线，也就是上述提到的内散射光线。当散射的方向和视线方向一致时，散射光线也能进入人眼。理论上，介质中粒子的散射光线碰到其他粒子之后还会进行散射，进入介质中的光线进行多次散射以后都有可能进入人眼，变成内散射光线。因为粒子数量的庞大和散射过程的各项异性，所以对散射过程进行建模是个复杂的任务。为了方便我们进行建模和提高渲染效率，我们只考虑粒子的单次散射，并且只考虑视线方向上的点的散射光线对人眼的影响。简化模型以后，光的传播过程如图\ref{pic_integrate} 所示。

\begin{figure}[htbp]
    \centering
    \includegraphics[width=.7\linewidth]{figures/pic_integrate}
    \caption{光线传播示意图}
    \label{pic_integrate}
\end{figure}

在图\ref{pic_integrate}中，$S$点是物体所在的位置。$L$点是光源所在的位置，$C$ 点是人眼所在的位置。$S$点处的光线经过传播介质到达人的眼睛，传播方向上有三个粒子$t1$、$t2$、$t3$，这三个粒子的内散射光线最终也会到达人的眼睛。如图，$t1$、$t2$粒子被遮光板挡住，处于阴影里，所以他们的内散射光线对最终结果的影响受阴影的影响，我们计算光线的时候需要考虑阴影因子。不考虑三个粒子的内散射光线。$S$ 点处的进入人眼的透射光值为$L_{transmitted}$，计算公式为\ref{eq:LTE-6}，其中$L_0$为光源$L$的强度，$V_S$ 为$S$ 点处的阴影因子，$R_S$ 为$S$点处视线方向的反射率：
\begin{eqnarray}
    L_{transmitted}={{L}_{0}}T(L,S)R_ST(S,C)V_S
    \label{eq:LTE-6}
\end{eqnarray}
接下来我们需要考虑的是介质中每个点的内散射光线对眼睛的影响。以$t1$点为例，$t1$点处的内散射光线$T_1is$ 计算公式如下，$P_{t1}$为相位方程，用来表示光线经过$t1$ 粒子时，散射进人眼的光线占总入射光线强度的比例：
\begin{eqnarray}
    T_1is={{L}_{0}}T(L,t1)P_{t1}T(t1,C)V_{t1}
    \label{eq:LTE-7}
\end{eqnarray}
结合公式\ref{eq:LTE-6}和公式\ref{eq:LTE-7}，图\ref{pic_integrate}中进入人眼的光线强度$L_C$为：
\begin{eqnarray}
    L_C=L_{transmitted}+{{L}_{0}}T(L,t1)P_{t1}T(t1,C)V_{t1}+
    {{L}_{0}}T(L,t2)\rho_{t1}T(t2,C)V_{t2}+{{L}_{0}}T(L,t2)P_{t2}T(t2,C)V_{t2}
    \label{eq:LTE-8}
\end{eqnarray}
现实生活中传播介质中的粒子数量庞大，将公式\ref{eq:LTE-8}进行推广，计算光线传播过程中视线方向上所有粒子$t0$-$tn$的散射光线，则得到公式\ref{eq:LTE-9}：
\begin{eqnarray}
    L_C=L_{transmitted}+\int\limits_{0}^{\vec sc}{{{L}_{0}}}T(L,t){P_{t}}T(t,C){{V}_{t}}dt
    \label{eq:LTE-9}
\end{eqnarray}
上述公式\ref{eq:LTE-9}考虑的是单光源场景，如果场景中有多光源，那么进入人眼的光线是场景中所有光源反射或者散射进入人眼的光线总和。公式如下：
\begin{eqnarray}
    L_C=\sum\limits_{l}^{lights}{({{L}_{l}}_{\text{transmitted}}+\int\limits_{0}^{sc}{{{L}_{l}}}T({{L}_{l}},t){P_{tl}}T(t,C){{V}_{tl}}dt)}
    \label{eq:LTE-10}
\end{eqnarray}

 \subsection{散射模型}
 上一小节主要介绍与光的传播过程相关的物理知识和数学知识。根据上述公式的推导可知，在渲染过程中模拟散射现象，我们需要计算透射光线和内散射光线。透射光与消光系数和传播距离有关，内散射光线由光线在视线方向上的能量传输率决定。根据传播介质中粒子直径的大小，散射可以分为两种模型：米氏散射模型(Mie Scattering) 和瑞利散射模型(Rayleigh Scattering)。


 \textbf{米氏散射：}
 米氏散射模型中，光线传播介质中粒子的直径较大。在大气中，引起米氏散射的主要物质有烟，雾，灰尘，微水滴等。所以雾对光线的散射主要是米氏散射。米氏散射模型中，散射强度和光线的波长几乎无关，不同波长的入射光线会被粒子均匀地散射。所以，米氏散射最终的结果呈现白色，如云，雾等。米氏散射具有明显的各向异性。米氏散射中各方向的散射强度由相位方程决定，相位方程依赖于介质中粒子的直径和入射光的波长。在实时应用中，为了减少计算量，采用Henyey-Greenstein方程近似模拟雾的米氏散射相位方程。方程如公式\ref{eq:LTE-11} 所示：
 \begin{eqnarray}
    P_{HG}(\mu,g)=\frac{1-g^{2}}{(1+g^{2}-2g\mu)^{\frac{3}{2}}}
    \label{eq:LTE-11}
\end{eqnarray}
其中，$\mu = cos\theta$，$\theta$是入射光线与出射光线的夹角。$g$是不对称因子，$g \in [-1,1]$，$g$对散射光线分布的影响如图\ref{pic_gfactor}所示，$g$越大，前向散射特征越明显，$g$越小，后向散射特征越明显。

\begin{figure}[htbp]
    \centering
    \includegraphics[width=.7\linewidth]{figures/gfactor}
    \caption{不对称因子对散射分布的影响示意图}
    \label{pic_gfactor}
\end{figure}


 \textbf{瑞利散射：}
光线在传播过程中遇到直径比自身波长更小的粒子时会发生瑞利散射，比如光线在穿过大气层4.5千米以上的区域。此时传播介质中的微粒直径较小，发生瑞利散射。瑞利散射的计算与同样由散射系数和相位方程决定。散射系数计算公式如\ref{eq:LTE-12} 所示，相位方程$P_{Ray}(\theta)$公式如\ref{eq:LTE-13}所示。
\begin{eqnarray}
   \beta_{Ray}=\frac{8\pi^{3}(n^{2}-1)^{2}}{3N\lambda^{4}}(\frac{6+3\sigma_{dp}}{6-7\sigma_{dp}})
    \label{eq:LTE-12}
\end{eqnarray}

其中，$\lambda$是可见光波长，$n$ 是光线的大气折射率，$N$是大气单位体积中的微粒数，$\sigma_{dp}$ 表示去极化因子，用于校正大气分子的各向异性。
\begin{eqnarray}
  P_{Ray}(\theta)=\frac{3}{16\pi}(1+cos^2\theta)
  \label{eq:LTE-13}
\end{eqnarray}

其中，$\theta$是入射光线与出射光线的夹角。当夹角为$\theta$时，计算结果为出射光强度占入射光强度的比重。

由公式\ref{eq:LTE-12}可知，瑞利散射的散射系数与波长的四次方成反比。所以在瑞利散射的作用下，波长较短的蓝光进入人眼的强度较大，天空呈蓝色。由公式\ref{eq:LTE-13} 可知，瑞利散射具有各向同性的特点。


\section{二维Ray-marching算法生成体积雾和体积光}
\label{2DRM}
在上述光线散射模型中，我们对光线的传播过程进行建模。在模拟光线的散射步骤时，假设光线在传播方向会遇到很多的微粒，这些微粒会对光线有散射作用。介质中的粒子差异性很大，模拟和计算需要消耗的资源较多。为了方便渲染，我们需要简化模型，只考虑视线上的微粒对眼睛的影响，在每条视线上取$n$ 个离散的点，计算这些点的内散射光线对人眼的影响。


在计算内散射光线的步骤中，我们采用Ray-marching算法。Ray-marching算法的思想
如图\ref{pic_raymarching} 所示：从人眼(相机)的位置发射$n$条光线，在每条光线上找到Ray-marching 步骤的起点和终点。在起点和终点之间，每隔一定的步长采样一次，计算我们渲染所需要的信息。步长可以是定长，也可以动态调整。图中，在长方形的包围盒中进行Ray-marching，所以起始点和终点是光线与包围盒的两个交点。因为本文算法以Ray-marching 算法为基础的，所以本小节讲一下使用Ray-marching 算法计算内散射光线的基本步骤。

\begin{figure}[htbp]
    \centering
    \includegraphics[width=.7\linewidth]{figures/pic_integrate}
    \caption{Ray-marching示意图}
    \label{pic_raymarching}
\end{figure}

Ray-marching算法中并行处理每条射线的计算，所以这种耦合度较低的计算很适合在GPU 上实现。通常Ray-marching 算法需要考虑两个问题：Ray-marching的步长，Ray-marching的方向和起点、终点。Ray-marching的步长可以取固定长度，这种做法是不需要额外计算与权衡。缺点也很明显，步长太大，会遗漏一些重要的信息，步长太小，Ray-marching的次数会成倍增大。Ray-marching 的步长也可以动态计算，但是可能每个场景对步长的要求不一样，所以动态计算步长要考虑的因素也不一样。在光线传播路径上采用Ray-marching 算法，Ray-marching的起点是人眼(相机)，终点是这条射线与场景的交点。


二维Ray-marching算法模拟体积雾和体积光的算法中，雾和体积光中介质的密度分布由二维纹理决定，在Ray-marching步骤中，通过采样点的位置信息可以求得二维纹理中的采样坐标，根据采样坐标得到当前采样点的密度。


由公式\ref{eq:LTE-7} 可知，根据光线传播路径中每个采样点的位置信息、密度信息和散射模型的相位方程等，可以计算出每个采样点内散射光线的强度。从视点出发，到Ray-marching 的终点，我们可以近似计算出在这条传播路径上，有多少散射光线进入人眼。为了考虑算法的效率，对于近平面上的每个像素点，我们只投射一根光线，Ray-marching 算法求得每根光线上的内散射值后，与透射光的强度进行叠加，可以得到每个像素点最终的颜色。

在不考虑阴影的情况下生成的效果为雾效，体积光的渲染需要在二维Ray-marching算法中增加阴影对粒子的影响。通常情况下为了提高效率，会采用阴影贴图技术，基本的阴影贴图技术在场景较为复杂的情况下不能很好处理阴影，因此很多研究者会考虑使用滤波等操作来优化阴影。

三维空间中粒子的分布只由二维纹理控制，密度分布的同质性较强，视觉效果欠佳，因此，二维Ray-marching算法会增加一个随机变量来干扰雾密度的分布，使其看起来呈现各项异性的特点。二维纹理中进行Ray-marching算法的另一个缺点就是二维纹理需要较大的分辨率，较小的分辨率走样的情况比较严重。此外在存在透明场景的物体中，雾效和体积光的渲染需要额外的计算成本。

%\section{}
%\FIXME{这个算法太经典了，全部删掉}
%由公式\ref{eq:LTE-8}可知，计算散射光和透射光时需要计算当前点的阴影因子。阴影因子是判断物体是否在阴影里的参数。这一小节，主要介绍一下最基本的计算阴影的算法：Shadow Mapping 算法，本文模拟体积光的阴影算法是基于Shadow Mapping的，第三章会着重介绍本文用到的级联阴影算法和指数阴影贴图算法。相比较传统的Shadow Mapping 算法，本文的阴影算法对大型的户外场景有更好的适应。
%
%
%阴影产生原因是，光线在传播过程中受到了物体的遮挡，光线无法穿过不透明物体而形成较暗的区域就是阴影。根据这个现象可知，我们只要知道像素或者粒子是否被光线照射到就可以得到它的阴影因子。通常阴影因子值为0 或者1。在阴影里时，当前像素或者粒子的阴影因子为0，不在阴影里时，阴影因子为1。如图\ref{pic_shadow}所示，如果我们把光源看成人眼,那么被光源所看到的地方就是光线可以直接照射到的地方，反之，就是处于阴影里的地方。基本的阴影贴图算法就是依据这个思想。
%\begin{figure}[htbp]
%    \centering
%    \includegraphics[width=.7\linewidth]{figures/shadow}
%    \caption{阴影产生原因示意图}
%    \label{pic_shadow}
%\end{figure}
%所以基本的阴影贴图算法分为下面两个步骤：
%\begin{itemize}
%\item  将相机放在光源的位置，对整个场景进行渲染，根据与光源相关的图形矩阵计算出光栅化后每个片元的深度，将最靠近相机的片元深度信息保存到阴影纹理中；
%\item 正常渲染场景，将当前处理的片元位置映射到光源所在的图形矩阵中。比较当前片元的深度信息和上一个步骤中的阴影纹理所存放的深度信息，如果当前片元深度大于纹理中所存放的深度，说明当前片元被物体遮挡处于阴影中，阴影因子值为0，反之，阴影值为1。
%\end{itemize}
%但是按照这个步骤进行渲染，我们得到的阴影会有瑕疵，如图\ref{pic1_shadow_a_b} 中a 图所示。这个现象可以用图\ref{pic_shadowerror}来解释。
%\begin{figure}[htbp]
%    \centering
%    \includegraphics[width=.7\linewidth]{figures/shadow_error}
%    \caption{阴影瑕疵原理示意图}
%    \label{pic_shadowerror}
%\end{figure}
%正对眼睛的三个粗黑色的短线表示眼睛所见的片元，黄色的线条组成的线框代表阴影的深度纹理。在光源的视点下，黑色片元有一部分在阴影中，有一部分不在阴影中，所以会出现瑕疵。通常的补救措施是在判断深度时加一个阈值，仅当当前片元的深度确实比阴影纹理中的深度大时才将其判断为在阴影中。
%\begin{figure*}[!htb]
%\makeatletter
%\renewcommand{\@thesubfigure}{\hskip\subfiglabelskip}
%\makeatother
%    \centering
%    \subfigure[a]{
%    \includegraphics[width=0.45\textwidth, height=5cm]{shadow_a}}
%    \subfigure[b]{
%    \includegraphics[width=0.45\textwidth, height=5cm]{shadow_b}}
%    \caption{阴影效果示意图}
%    \label{pic1_shadow_a_b}
%\end{figure*}
%但是将阈值设为定值的情况，这个阈值不能既满足曲面又满足平面，例如，阈值设为0.005 时，这个值对平面来说偏大，对曲面来说又偏小。一个常用的解决方案是根据斜率来调整阈值，得到的阴影效果会更好。效果如图\ref{pic1_shadow_a_b}中b图所示。根据斜率求取阈值的公式如下：
%\begin{eqnarray}
%    \sigma \text{=}\lambda *\tan (\arccos (dot(\vec n,\vec l)))
%    \label{eq:LTE-14}
%\end{eqnarray}
%在公式\ref{eq:LTE-14}中，$\lambda$为阈值的基准值，$\vec n$和$\vec l$分别为当前像素点的法线和相邻像素点的法线。通过这两个法线可以求出微平面的倾斜角，从而计算出当前像素点的斜率。

\section{本章小结}
  本章首先简单地介绍了雾和体积光形成的原因，详细介绍了和光线传播相关的物理模型和数学知识，然后简要讲述了散射现象和两种常见的散射模型。最后本章介绍了如何在二维纹理中应用Ray-marching生成体积雾和体积光，这个方法是本文算法的基础，本文算法在此方法上进行改进，改进点和改进方法在第三章中作详细说明。




